var nnlayers = require('../../src/nn/layers');


var sampleprms = [0, 1e-6];

// Calculate parameters by a linear regression on input features
// (plus non-linear bounding transforms)
function paramsByLinReg(params, name, bounds, features) {
	// If features has different dimensionality, we need separate params,
	//    even if the name is the same.
	name += '(' + features.length + ')';
	var intercepts = VPF.param(params, name + '[icepts]', [bounds.length], gaussianERP.sample, sampleprms);
	var output;
	if (features.length === 0) {
		output = intercepts;
	} else {
		var coeffs = VPF.param(params, name + '[coeffs]', [bounds.length, features.length], gaussianERP.sample, sampleprms);
		output = nnlayers.fullyConnected(features, coeffs, intercepts);
	}
	var result = __AD__.vec2scalars(output);
	for (var i = 0; i < bounds.length; i++) {
		result[i] = bounds[i].fwd(result[i]);
	}
	return result;
}

module.exports = {
	paramsByLinReg: paramsByLinReg
}