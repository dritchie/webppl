
var isautomated = function() { return typeof(__params__) !== 'undefined'; }

var autoparam = function(name, defval) {
	return isautomated() && __params__.hasOwnProperty(name) ? __params__[name] : defval;
}

// ------------------------------------------------------------------

var nVars = autoparam('nVars', 3);
var targetsum = 10 * nVars / 3;
var tightness = autoparam('tightness', targetsum / 10);

var variParams = {
	numParticles: autoparam('numParticles', 100),
	maxNumFlights: autoparam('maxNumFlights', 1000),
	convergeEps: 0.1,
	adagradInitLearnRate: 1,

	objective: autoparam('objective', 'ELBO'),
	// objective: autoparam('objective', 'EUBO'),

	verbosity: autoparam('verbosity', {
		flightNum: true,
		scoreDiff: true,
		endStatus: true
	})
};

// ------------------------------------------------------------------

var params = require.call(null, 'vpf_experiments/targetsum/params');

var vparams = Variational.newParams();

// var _gaussian = gaussian;
var _gaussian = function(mu, sigma, prevs) {
	var prms = params.generalParams(vparams, prevs.length, prevs);
	Variational.gaussianERP.importanceERP.setParams(prms);
	return sample(Variational.gaussianERP, [mu, sigma]);
}

var genvars = function(prevVars) {
	if (prevVars.length === nVars) {
		return prevVars;
	} else {
		var x = _gaussian(0, 5, prevVars);
		return genvars(prevVars.concat([x]));
	}
}

var program = function() {
	var vars = genvars([]);
	var sumvars = sum(vars);
	factor(gaussianERP.score([targetsum, tightness], sumvars));
	return vars;
}

var result = Variational(program, vparams, variParams);

if (!isautomated()) {
	console.log('target sum: ' + targetsum);
	repeat(10, function() {
		var nums = ParticleFilter(program, 1).MAP().val;
		console.log(sum(nums) + ': ' + JSON.stringify(nums));
	});
	undefined;
} else {
	var utils = require.call(null, 'vpf_experiments/targetsum/utils');
	var samps = repeat(autoparam('numTestSamps', 100), function() {
		return ParticleFilter(program, 1).MAP().val;
	});
	utils.computeAdditionalDependentMeasures(result, samps, targetsum);
	result;
}