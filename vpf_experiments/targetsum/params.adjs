var bounds = require('../../src/bounds');
var nnlayers = require('../../src/nn/layers');

var gaussian_hyperprior = [0, 1e-6];

function generalParams(params, basename, features) {

	features = features.map(function(x) { return x / 5; });

	var intercepts = VPF.param(params, basename + '[icepts]', [2], gaussianERP.sample, gaussian_hyperprior);
	var outputs = intercepts;
	if (features.length > 0) {
		var coeffs = VPF.param(params, basename + '[coeffs]', [2, features.length], gaussianERP.sample, gaussian_hyperprior);
		outputs = nnlayers.fullyConnected(features, coeffs, intercepts);
	}
	var results = __AD__.vec2scalars(outputs);
	// sigma
	var alpha = Math.min(0.01/features.length, 1);
	// var alpha = 1;
	results[1] = Math.exp(alpha * results[1]) + 0.01;
	return results;
}

module.exports = {
	generalParams: generalParams
};